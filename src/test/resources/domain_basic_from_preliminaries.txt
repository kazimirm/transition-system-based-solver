(define (domain domain_htn)
    (:types
        location - object
        vehicle - locatable
        locatable - object
    )
    (:predicates
        (road ?arg0 - location ?arg1 - location)
        (at ?arg0 - locatable ?arg1 - location)
    )
    (:task get_to
        :parameters (?v - vehicle ?l - location)
    )
    (:method m_drive_to_ordering_0
        :parameters (?l1 - location ?l2 - location ?v - vehicle)
        :task (get_to ?v ?l2)
        :subtasks (
            task0 (drive ?v ?l1 ?l2)
        )
    )
    (:method m_drive_to_via_ordering_0
        :parameters (?l2 - location ?l3 - location ?v - vehicle)
        :task (get_to ?v ?l3)
        :subtasks (and
            (task0 (get_to ?v ?l2))
            (task1 (drive ?v ?l2 ?l3))
        )
    )
    (:action drive
        :parameters (?v - vehicle ?l1 - location ?l2 - location)
        :precondition
            (and
            (at ?v ?l1)
            (road ?l1 ?l2)
        )
        :effect
            (and
            (not (at ?v ?l1))
            (at ?v ?l2)
        )
    )
)
